image: python:3.8.5

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: soam_db
  POSTGRES_USER: soam_usr
  POSTGRES_PASSWORD: soam_pass
  TEST_DB_CONNSTR: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"

services:
  - postgres

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - .nox/
    - .cache/pip
    - apt-cache/
    - ${PRE_COMMIT_HOME}
  policy: pull

before_script:
  - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
  - apt-get update -yq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" upgrade -y
  - apt-get install texlive-xetex texlive-fonts-recommended libpoppler-cpp-dev -y
  - pip install nox


stages:
  - validate
  - test_stage
  - version_stage
  - release_stage
  - deploy_stage

tests:
  stage: test_stage
  script:
    - nox --sessions tests
  only:
    refs:
      - merge_requests
      - master

lint:
  stage: test_stage
  script:
    - nox --sessions lint
  only:
    refs:
      - merge_requests
      - master

docstr-cov:
  stage: test_stage
  script:
    - pip install interrogate
    - interrogate soam -c pyproject.toml -vv
  only:
    refs:
      - merge_requests
      - master

bandit:
  stage: test_stage
  script:
    - nox --sessions bandit
  only:
    refs:
      - merge_requests
      - master

pyreverse:
  stage: test_stage
  script:
    - apt-get -qq update
    - apt-get -qq install -y graphviz
    - nox --sessions pyreverse
  only:
    refs:
      - merge_requests
      - master

pages:
  stage: deploy_stage
  script:
  - pip install .[dev]
  - cd documentation
  - sphinx-apidoc -f -o source ../soam
  - make html
  - cd ..
  - mv documentation/build/html/ public/
  artifacts:
    paths:
      - public
  only:
    refs:
      - master

# Deploy from master to package registry
# If PYPI_USERNAME/PYPI_PASSWORD are not set, defaults to gitlab
# package registry, thus using the required variables to do so
# The package will be uploaded to PYPI_URL, which can be overrided
# not to upload to gitlab's PYPI
deploy:
  stage: deploy_stage
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - export TWINE_USERNAME=${PYPI_USERNAME:=gitlab-ci-token}
    - export TWINE_PASSWORD=${PYPI_PASSWORD:=$CI_JOB_TOKEN}
    - export PYPI_REPO=${PYPI_URL:=https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi}
    - python -m twine upload --verbose --repository-url ${PYPI_REPO} dist/*
  only:
    refs:
      - master

tag_release_version:
  stage: version_stage
  script:
    - echo "TAG=v$(grep __version__ ./soam/__init__.py | cut -d "'" -f 2)" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env
  before_script:
    - ''
  only:
    refs:
      - master

release:
  stage: release_stage
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: tag_release_version
      artifacts: true
  release:
    tag_name: '$TAG'
    description: './CHANGELOG.md'
  script:
    - echo 'running release job for $TAG'
  before_script:
    - ''
  only:
    refs:
      - master

check_version:
  stage: validate
  script:
    - pip install packaging
    - git fetch origin $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - lib_ver=$(git diff origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME -- soam/__init__.py | grep __version__ | cut -d = -f 2 | xargs)
    - python -c "import sys; from packaging import version; exit(not version.parse(sys.argv[1]) > version.parse(sys.argv[2]))" $lib_ver
    - exit_status=$?
    - if [ $exit_status -eq 1 ]; then echo "Error comparing versions"; fi;
    - exit $exit_status
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"

check_changelog:
  stage: validate
  script:
    - git fetch origin $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - added_lines=$(git diff --numstat origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME -- CHANGELOG.md | awk '{print $1}')
    - if [ -z $added_lines ] || [ $added_lines -eq 0 ]; then echo "Changelog has not been modified" && exit 1; else echo "Changelog has been modified" && exit 0; fi;
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
